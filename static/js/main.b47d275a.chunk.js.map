{"version":3,"sources":["App.js","index.js"],"names":["subStrButton","marginLeft","App","_useState","useState","_useState2","Object","slicedToArray","arrayData","setArrayData","_useState3","_useState4","inputValue","setInputValue","_useState5","_useState6","currentArr","setcurrentArr","_useState7","_useState8","checked","setChecked","useEffect","fetch","then","response","json","arrData","data","react_default","a","createElement","className","type","value","onChange","oEvent","target","defaultChecked","onClick","Number","isInteger","filter","item","length","alert","strUpper","toLocaleUpperCase","strLower","toLowerCase","indexOf","style","rows","cols","ReactDOM","render","src_App","document","getElementById"],"mappings":"2IAGMA,QAAa,CACjBC,WAAY,SAiECC,MA/Df,WAAe,IAAAC,EACoBC,mBAAS,IAD7BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACPK,EADOH,EAAA,GACII,EADJJ,EAAA,GAAAK,EAEsBN,mBAAS,IAF/BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEPE,EAFOD,EAAA,GAEKE,EAFLF,EAAA,GAAAG,EAGsBV,mBAASI,GAH/BO,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGPE,EAHOD,EAAA,GAGKE,EAHLF,EAAA,GAAAG,EAIgBd,oBAAS,GAJzBe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAIPE,EAJOD,EAAA,GAIEE,EAJFF,EAAA,GAgDb,OA1CDG,oBAAU,WACTC,MAAM,aACLC,KAAK,SAAAC,GAAQ,OAAGA,EAASC,SACzBF,KAAK,SAAAG,GACJlB,EAAakB,EAAQC,SAEtB,IAqCCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,MAAStB,EAAYuB,SAN5C,SAA0BC,GACxBvB,EAAcuB,EAAOC,OAAOH,UAM1BL,EAAAC,EAAAC,cAAA,SAAOE,KAAK,WAAYK,eAAgBlB,EAASe,SAXrD,WACEd,GAAYD,OAYVS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,UAASQ,QAzCZ,WACEC,OAAOC,UAAUD,OAAO5B,IACzBK,EAAeT,EAAUkC,OAAO,SAACC,GAC/B,GAAGA,EAAKC,OAAOhC,EAAY,OAAOiB,EAAAC,EAAAC,cAAA,WAAMY,MAEpCE,MAAM,kBAoCV,cACAhB,EAAAC,EAAAC,cAAA,UAAQQ,QAlCZ,WAIE,GAHGC,OAAOC,UAAUD,OAAO5B,KACzBiC,MAAM,gBAEiB,kBAAfjC,EACN,GAAGQ,EAAQ,CACT,IAAM0B,EAAUlC,EAAWmC,oBACrBC,EAAUpC,EAAWqC,cAC3BhC,EAAcT,EAAUkC,OAAO,SAACC,GAChC,GAAGA,EAAKO,QAAQJ,IAAa,GAAKH,EAAKO,QAAQF,IAAa,EAAG,OAAOL,UAGtE1B,EAAcT,EAAUkC,OAAO,SAACC,GAChC,GAAGA,EAAKO,QAAQtC,IAAe,EAAG,OAAO+B,MAqBHQ,MAAOnD,GAAjD,cAEA6B,EAAAC,EAAAC,cAAA,YAAWqB,KAAK,KAAKC,KAAK,KAAKnB,MAAOlB,MC3D1CsC,IAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b47d275a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport './main.css'\r\nconst subStrButton={\r\n  marginLeft: \"20px\"\r\n}\r\nfunction App() {\r\n const [arrayData, setArrayData] = useState([]);\r\n const [inputValue, setInputValue] = useState(\"\");\r\n const [currentArr, setcurrentArr] = useState(arrayData);\r\n const [checked, setChecked] = useState(true);\r\n\r\n useEffect(()=>{\r\n  fetch('data.json')\r\n  .then(response=> response.json())\r\n  .then(arrData=>{\r\n    setArrayData(arrData.data);\r\n  })\r\n },[])\r\n\r\n function OutputDependingOnLength(){\r\nif(Number.isInteger(Number(inputValue))){\r\n  setcurrentArr( arrayData.filter((item)=>{\r\n    if(item.length>inputValue) return <div>{item}</div>\r\n  }))\r\n} else {alert(\"Input number\")}\r\n}\r\n\r\nfunction OutputDependingOnSubStr(){\r\n  if(Number.isInteger(Number(inputValue))){\r\n    alert(\"Input string\")\r\n  }\r\n  if(typeof inputValue === \"string\" ){\r\n      if(checked){\r\n        const strUpper= inputValue.toLocaleUpperCase();\r\n        const strLower= inputValue.toLowerCase();\r\n        setcurrentArr(arrayData.filter((item)=>{\r\n        if(item.indexOf(strUpper) > -1 || item.indexOf(strLower) > -1) return item\r\n      })) \r\n      } else { \r\n        setcurrentArr(arrayData.filter((item)=>{\r\n        if(item.indexOf(inputValue) > -1) return item\r\n     })) \r\n    }\r\n  }\r\n}\r\n\r\nfunction  changeCheckValue(){\r\n  setChecked(!checked)   \r\n}\r\n\r\nfunction changeInputValue(oEvent){\r\n  setInputValue(oEvent.target.value)\r\n}\r\n  return (\r\n    <div className=\"App\">\r\n    <div className=\"inputsContainer\">\r\n    <input type=\"text\" value = {inputValue} onChange={changeInputValue}></input>\r\n    <input type=\"checkbox\"  defaultChecked={checked} onChange={changeCheckValue}></input>\r\n    </div>\r\n    <div className=\"buttonsContainer\">\r\n    <button  onClick={OutputDependingOnLength}>WordLength</button>\r\n    <button onClick={OutputDependingOnSubStr} style={subStrButton}>SubString</button>\r\n    </div>\r\n    <textarea  rows=\"20\" cols=\"70\" value={currentArr}></textarea>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}